on:
  push:
    branches: [master, main]
    paths:
      - '**pipeline-dev.yml'
  # pull_request:
  #   branches: [ main ]

name: Build and Deploy a docker image to eks

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: service-news-app-backend
          IMAGE_TAG: dv222
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy:
    needs: build
    name: deploy
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.28.0'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_EKS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_EKS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name garvik-dev-cluster

      - name: Check Creds
        run: aws sts get-caller-identity

      - name: Deploy service-news-app-backend
        env:
            ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
            ECR_REPOSITORY: service-news-app-backend
            IMAGE_TAG: dv222
        run: |
          kubectl set image deployment/service-news-app-backend service-news-app-backend=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # kubectl -v=9 set image --record deployment/service-news-app-backend service-news-app-backend=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG